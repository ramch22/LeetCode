public int numMusicPlaylists(int N, int L, int K) {
		//dp[i][j] be the ith play list with jth song which is unique (not repeated until now) OR
		// jth song which is non-unique (repeated before)
		// if unique; num of ways to choose jth unique song is dp[i-1][j-1] * (N-j+1)
		// if non-unique;  num of ways to choose jth repearted song is dp[i-1][j] * MAX(j-k, 0);
		
		int[][] dp = new int[L+1][N+1];
		dp[0][0] = 1;
		
		for(int i = 1; i <= L; i++) {
			for(int j= 1; j <= N; j++) {
				dp[i][j] += dp[i-1][j-1] * (N-j+1);
				dp[i][j] += dp[i-1][j] * Math.max(j-K, 0);				
			}
		}
		return dp[L][N];
    }
